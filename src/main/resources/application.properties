#dev
#spring.datasource.url=jdbc:postgresql://localhost:5432/wakepark
#spring.datasource.username=user
#spring.datasource.password=password

#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql = true
#spring.jpa.properties.hibernate.use_sql_comments = true

#heroku
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql = false
spring.jpa.properties.hibernate.use_sql_comments = false
#end

spring.jpa.properties.hibernate.jpa.compliance.proxy = false
spring.jpa.properties.hibernate.javax.cache.provider = ${org.ehcache.jsr107.EhcacheCachingProvider}
spring.jpa.properties.hibernate.cache.region.factory_class = ${org.hibernate.cache.jcache.internal.JCacheRegionFactory}
spring.jpa.properties.hibernate.cache.use_second_level_cache = true
spring.jpa.properties.hibernate.cache.use_query_cache = false
spring.jpa.properties.javax.persistence.validation.group.pre-persist = ${ru.project.wakepark.View$Persist}
spring.jpa.properties.javax.persistence.validation.group.pre-update = ${ru.project.wakepark.View$Persist}
spring.cache.type=NONE

logging.config=classpath:logback.xml

# initialize db (not for heroku)
spring.datasource.data=classpath:db/data.sql
spring.datasource.schema=classpath:db/schema.sql
spring.datasource.initialization-mode=always
#end

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp